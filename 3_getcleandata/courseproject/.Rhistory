rm(list=ls())
?rm
list=ls()
ls()
rm(list=ls())
# Before you begin make sure that the environment is cleared.
rm(list=ls())
#load training data
xTrain <- read.table("./data/train/X_train.txt")
yTrain <- read.table("./data/train/Y_train.txt")
#load test data
xTest <- read.table("./data/train/X_test.txt")
yTest <- read.table("./data/train/Y_test.txt")
# Before you begin make sure that the environment is cleared.
rm(list=ls())
#load training data
xTrain <- read.table("./data/train/X_train.txt", header=FALSE)
yTrain <- read.table("./data/train/y_train.txt", header=FALSE)
#load test data
xTest <- read.table("./data/train/X_test.txt", headaer=FALSE)
yTest <- read.table("./data/train/y_test.txt", header=FALSE)
rm(list=ls())
xTrain <- read.table("./data/train/X_train.txt", header=FALSE)
yTrain <- read.table("./data/train/y_train.txt", header=FALSE)
xTest <- read.table("./data/train/X_test.txt", header=FALSE)
yTest <- read.table("./data/train/y_test.txt", header=FALSE)
#load test data
xTest <- read.table("./data/test/X_test.txt", header=FALSE)
yTest <- read.table("./data/test/y_test.txt", header=FALSE)
top(xTest)
head(xTest)
head(xTrain, row=5)
?head
head(xTrain n=3)
head(xTrain n=6L)
head(xTrain, n=2)
head(yTrain, n=1)
head(yTrain)
head(xTest)
#Merge the X training and Test data - merge by row not column
xMerged <- rbind(xTrain, xTest)
head(xMerged)
tail(xMerged)
#Merge the Y training and Test data - merge by row not column
yMerged <- rbind(yTrain, yTest)
tail(yMerged)
#Add the feature names to the xMerged data.table
features <- readData("./data/features.txt")[,2]
names(merged) <- featureNames
features <- read.table("./data/features.txt")[,2]
head(features)
features <- read.table("./data/features.txt")
head(features)
head(features[,2])
names(merged) <- features[,2]
names(xMerged) <- features[,2]
head(xMerged)
source(run_analysis)
source(run_analysis.R)
source(run_analysis.R)
source("run_analysis.R")
runAnalysis
runAnalysis()
source("run_analysis.R")
runAnalysis()
source("run_analysis.R")
runAnalysis()
source("run_analysis.R")
runAnalysis()
source("run_analysis.R")
runAnalysis()
source("run_analysis.R")
runAnalysis()
source("run_analysis.R")
runAnalysis()
source("run_analysis.R")
runAnalysis()
source("run_analysis.R")
runAnalysis()
head(xMerged)
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
runAnalysis()
source("run_analysis.R")
runAnalysis()
source("run_analysis.R")
runAnalysis()
head(merged)
tail(merged)
source("run_analysis.R")
runAnalysis()
head(merged)
sub1_merged <- merged[,c(1,2,grep("std", colnames(merged)), grep("mean", colnames(merged)))]
head(sub1_merged)
?grep
chosen <- merged[,c(1,2,grepl('mean|std', names) & !grepl('meanFreq', names)]
chosen <- merged[,c(1,2,grepl('mean|std', names) & !grepl('meanFreq', names))]
chosen <- merged[,c(1,2,grep('mean|std', names) & !grep('meanFreq', names))]
chosen <- merged[,c(1,2,grep('mean|std', colnames(merged)) & !grep('meanFreq', colnames(merged)))]
chosen <- merged[,c(1,2,grep("mean|std", colnames(merged)) & !grep("meanFreq", colnames(merged)))]
sel_obs <- (grepl("mean|std", features) & !grepl("-meanFreq"))
sub1_merged <- merged[sel_obs==TRUE]
sel_obs <- (grepl("mean|std", features) & !grepl("-meanFreq"))
sub1_merged <- merged[sel_obs==TRUE]
sel_obs <- (grepl("mean|std", features) & !grepl("-meanFreq"))
source("run_analysis.R")
runAnalysis()
sel_obs <- (grepl("mean|std", features) & !grepl("-meanFreq", features))
sub1_merged <- merged[sel_obs==TRUE]
head(sub1_merged)
sub1_merged <- merged[,c(1,grep("std", colnames(merged)), (grep("mean", colnames(merged)&!grep("meanFreq", colnames)))]
sub1_merged <- merged[,c(1,grep("std", colnames(merged)), (grep("mean", colnames(merged)&!grep("meanFreq", colnames))))]
sub1_merged <- merged[,c(1,grep("std", colnames(merged)), grep("mean", colnames(merged)))]
sub2_merged <- merged[,c(1,!grep("meanFreq", colnames))]
sub2_merged <- merged[,c(1,!grep("meanFreq", colnames))]
sel_obs <- (grepl("-meanFreq", features))
sel_obs
sel_obs <- (!grepl("-meanFreq", features))
sel_obs
features
sel_obs <- (!grepl("- meanFreq", features))
sel_obs <- (!grepl("- meanFreq()", features))
sel_obs <- (!grepl("- meanFreq()", features))
activity_types <<- read.table("./data/activity_labels.txt")
activity_types
Get the activty types
activity_types <<- read.table("./data/activity_labels.txt")
merged$activity <- factor(merged$activity, levels=activity_types$V1, labels=activity_types$V2)
activity_types$V2
activity_types$V1
merged$activity
Get the activty types
activity_types <<- read.table("./data/activity_labels.txt")
merged$activity <<- factor(merged$activity, levels=activity_types$V1, labels=activity_types$V2)
activity_types <<- read.table("./data/activity_labels.txt")
merged$activity <<- factor(merged$activity, levels=activity_types$V1, labels=activity_types$V2)
merged$activity <<- factor(merged[,1], levels=activity_types$V1, labels=activity_types$V2)
merged <<- factor(merged[,1], levels=activity_types$V1, labels=activity_types$V2)
head(merged)
tail(merged)
head(merged, n=100)
source("run_analysis.R")
runAnalysis()
des_act
source("run_analysis.R")
runAnalysis()
head(descriptive_merged)
tail(descriptive_merged)
dataset2 <- ddply(descriptive_merged, .(des_act, Activity_Type), .fun=function(x){ colMeans(x[,-c(1:2)]) })
?ddply
install.packages("ddply")
install.packages("ply")
install.packages("plyr")
dataset2 <- ddply(descriptive_merged, .(des_act, Activity_Type), .fun=function(x){ colMeans(x[,-c(1:2)]) })
library(plyr)
dataset2 <- ddply(descriptive_merged, .(des_act, Activity_Type), .fun=function(x){ colMeans(x[,-c(1:2)]) })
dataset2
head(dataset2)
head(dataset2)
source(run_analysis.R)
source("run_analysis.R")
runAnalysis()
runAnalysis()
source("run_analysis.R")
runAnalysis()
head(tidy_data)
source("run_analysis.R")
runAnalysis()
head(tidy_data)
head(tidy_data[,c(1,2,3,4,5)])
?ddply
View(tidy_data)
write.csv(file="./data/tidy_data.csv", x=tidy_data)
source("run_analysis.R")
runAnalysis()
View(tidy_data)
?factor
?ddply
source("run_analysis.R")
?ddply
