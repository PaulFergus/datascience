#############################################################################
# Project:      Exploratory Data Analysis
# Description:  This is the solution for the course Assignment for the
#               getting and cleaning data module within the Data Science
#               Specialisation delivered by John Hopkins University, via
#               coursera.org.
# Developer:    Dr Paul Fergus
# Email:        p.fergus@ljmu.ac.uk
#############################################################################
# Load required libraries.
#Inititialisation
#Set the working directory
setwd("~/Google Drive/LJMU6/Research/Git/datascience/4_exploratorydataanalysis/course_project_1")
#clean the environment
rm(list=ls())
#Set variables
data <- NULL
sub_data <- NULL
run_analyse <- function(){
#Do not unzip and load the data everyting the function is called - it is too slow.
#The dataset has 2,075,259 rows and 9 columns. First calculate a rough estimate of
#how much memory the dataset will require in memory before reading into R. Make sure
#your computer has enough memory (most modern computers should be fine).
if(is.null(data)){
#Read in the dataset - I am reading the dataset in full as my machine has no
#problem dealing with data of this size.
data <<- read.table(
unz("./data/exdata-data-household_power_consumption.zip",
"household_power_consumption.txt"), sep=";", header=T, na.string="?")
}
#We will only be using data from the dates 2007-02-01 and 2007-02-02. One alternative
#is to read the data from just those dates rather than reading in the entire dataset
#and subsetting to those dates.
#First convert the date column to a Date class
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
#Extract the subset of data
sub_data <<- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
#At this point you can remove the full data set to save on memory as it is not needed
#after this point.
rm(data)
#You may find it useful to convert the Date and Time variables to Date/Time classes
#in R using the strptime() and as.Date() functions.
sub_data$DateTime <<- paste(sub_data$Date, sub_data$Time)
sub_data$DateTime <<- strptime(sub_data$DateTime, format="%Y-%m-%d %H:%M:%S")
#Plot 1
#Construct the plot and save it to a PNG file with a width of 480 pixels and a
#height of 480 pixels.
png(filename="plot1.png", width = 480, height=480, units="px", bg="white")
#Set the query perameters - in this instance the margins
par(mar  = c(6,6,5,4))
#Create the histagram
hist(
sub_data$Global_active_power,
col = "red", main = "Global Active Power",
xlab = "Global Active Power(killowatts)")
#returns the number and name of the new active device (after the specified device has been shut down)
dev.off()
}
source("plot1.R")
run_analysis()
run_analyse()
run_analyse()
run_analyse()
source("plot2.R")
run_analyse()
source("plot3.R")
run_analyse()
source("plot4.R")
run_analyse()
source("plot1.R")
run_analyse()
run_analyse()
par()$mar
source("plot1.R")
run_analyse()
source("plot1.R")
run_analyse()
source("plot2.R")
run_analyse()
source("plot3.R")
run_analyse()
