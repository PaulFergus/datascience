86
96
143
190
134
160
264
64
79
71
35
70
58
54
22
32
752
61
32
13
23
2
26
32
32
32
45
37
80
97
4
21
23
27
25
23
43
55
46
51
28
29
25
23
44
70
20
18
17
62
22
65
65
57
14
20
22
14
41
20
22
16
125
31
157
35
55
205
190
120
60
119
63
107
140
71
55
177
71
71
32
108
9
9
14
6
9
6
8
8
90
115
88
50
30
68
55
68
46
77
81
29
30
39
38
35
49
35
39
56
50
81
12
58
74
72
113
20
47
71
62
27
84
25
25
29
25
32
27
19
24
22
19
70
16
27
17
66
468
x
x <- [40
27
40
51
90
93
101
82
81
9
52
65
69
52
49
111
102
115
110
96
120
117
14
15
15
20
2
16
12
13
12
16
86
96
143
190
134
160
264
64
79
71
35
70
58
54
22
32
752
61
32
13
23
2
26
32
32
32
45
37
80
97
4
21
23
27
25
23
43
55
46
51
28
29
25
23
44
70
20
18
17
62
22
65
65
57
14
20
22
14
41
20
22
16
125
31
157
35
55
205
190
120
60
119
63
107
140
71
55
177
71
71
32
108
9
9
14
6
9
6
8
8
90
115
88
50
30
68
55
68
46
77
81
29
30
39
38
35
49
35
39
56
50
81
12
58
74
72
113
20
47
71
62
27
84
25
25
29
25
32
27
19
24
22
19
70
16
27
17
66
468]
x <- c(40,27,40,51,90,93,101,82,81,9,52,65,69,52,49,111,102,115,110,96,120,117,14,15,15,20,2,16,12,13,12,16,86,96,143,190,134,160,264,64,79,71,35,70,58,54,22,32,752,61,32,13,23,2,26,32,32,32,45,37,80,97,4,21,23,27,25,23,43,55,46,51,28,29,25,23,44,70,20,18,17,62,22,65,65,57,14,20,22,14,41,20,22,16,125,31,157,35,55,205,190,120,60,119,63,107,140,71,55,177,71,71,32,108,9,9,14,6,9,6,8,8,90,115,88,50,30,68,55,68,46,77,81,29,30,39,38,35,49,35,39,56,50,81,12,58,74,72,113,20,47,71,62,27,84,25,25,29,25,32,27,19,24,22,19,70,16,27,17,66,468)
top(x)
head(x)
summary(x)
?percentile
quantile(x,c(0.25, 0.50,0.75,0.95))
boxplot(x)
x <- c(40,27,40,51,90,93,101,82,81,9,52,65,69,52,49,111,102,115,110,96,120,117,14,15,15,20,2,16,12,13,12,16,86,96,143,190,134,160,264,64,79,71,35,70,58,54,22,32,752,61,32,13,23,2,26,32,32,32,45,37,80,97,4,21,23,27,25,23,43,55,46,51,28,29,25,23,44,70,20,18,17,62,22,65,65,57,14,20,22,14,41,20,22,16,125,31,157,35,55,205,190,120,60,119,63,107,140,71,55,177,71,71,32,108,9,9,14,6,9,6,8,8,90,115,88,50,30,68,55,68,46,77,81,29,30,39,38,35,49,35,39,56,50,81,12,58,74,72,113,20,47,71,62,27,84,25,25,29,25,32,27,19,24,22,19,70,16,27,17,66)
sum
summary
summary(x)
x <- c(40,27,40,51,90,93,101,82,81,9,52,65,69,52,49,111,102,115,110,96,120,117,14,15,15,20,2,16,12,13,12,16,86,96,143,190,134,160,264,64,79,71,35,70,58,54,22,32,61,32,13,23,2,26,32,32,32,45,37,80,97,4,21,23,27,25,23,43,55,46,51,28,29,25,23,44,70,20,18,17,62,22,65,65,57,14,20,22,14,41,20,22,16,125,31,157,35,55,205,190,120,60,119,63,107,140,71,55,177,71,71,32,108,9,9,14,6,9,6,8,8,90,115,88,50,30,68,55,68,46,77,81,29,30,39,38,35,49,35,39,56,50,81,12,58,74,72,113,20,47,71,62,27,84,25,25,29,25,32,27,19,24,22,19,70,16,27,17,66)
summary(x)
boxplot(x)
quantile(x,0.6)
boxplot(x)
hist(x)
plot(x)
y <- x
y[y>60] <- 60
plot(y)
summary(y)
y
sum(x[x==60])
sum(x[x==2])
sum(x[x==10])
sum(x[x==57])
yt <- table(y)
yt
summary (yt)
x <- c(40,27,40,51,90,93,101,82,81,9,52,65,69,52,49,111,102,115,110,96,120,117,14,15,15,20,2,16,12,13,12,16,86,96,143,190,134,160,264,64,79,71,35,70,58,54,22,32,752,61,32,13,23,2,26,32,32,32,45,37,80,97,4,21,23,27,25,23,43,55,46,51,28,29,25,23,44,70,20,18,17,62,22,65,65,57,14,20,22,14,41,20,22,16,125,31,157,35,55,205,190,120,60,119,63,107,140,71,55,177,71,71,32,108,9,9,14,6,9,6,8,8,90,115,88,50,30,68,55,68,46,77,81,29,30,39,38,35,49,35,39,56,50,81,12,58,74,72,113,20,47,71,62,27,84,25,25,29,25,32,27,19,24,22,19,70,16,27,17,66,468)
y <- x
y[y>60] <- 60
yt <- table(y)
summary (yt)
yt
summar(yy
summar(y)
summar(y)
summary(y)
data(diamond)
library(datasets)
data(diamond)
data(diamond)
data(diamonds)
library(ggplot2)
data(diamonds)
head(diamond)
head(diamonds)
y <- diamonds$price; x <- diamonds$carat; n <- length(y)
fit <- lm(y ~ x)
e <- resid(fit)
yhat <- predict(fit)
max(abs(e -(y - yhat)))
e
max(abs(e - coef(fit[1] - coef(fit[2] * x))))
max(abs(e - coef(fit)[1] - coef(fit)[2] * x))))
max(abs(e - coef(fit)[1] - coef(fit)[2] * x)))
max(abs(e - coef(fit)[1] - coef(fit)[2] * x))
max(abs(e -(y - yhat)))
max(abs(e - coef(fit)[1] - coef(fit)[2] * x))
data(anscombe)
example(anscombe)
example(diamonds)
library(UsingR)
data(diamond)
y <- diamond$price
x <- diamond$carat
n <- length(y)
fit <- lm( y ~ x)
sumary(fit)$coefficients
summary(fit)$coefficients
plot(x,y, frame=FALSE, xlab = "carat", ylab="Dollars", pch=21,col="black",bg="lightblue",cex=2)
abline(fit, lwd = 2)
newdata <- data.frame(x = xVals)
newdata <- data.frame(x = x)
p1 <- predict(fit, newdata, interval = ("confidence"))
p2 <- predict(fit, newdata, interval = ("prediction"))
plot(x,y, frame=FALSE, xlab = "carat", ylab="Dollars", pch=21,col="black",bg="lightblue",cex=2)
abline(fit, lwd=2)
lines(x,p1[,2]) ; lines(x, p1[,3])
lines(x,p2[,2]) ; lines(x, p2[,3])
n <- 100; x <- rnorm(n);x2 <- rnorm(n);x3 <- rnorm(n)
y <- x + x2 +x3 + rnorm(n,sd=.1)
coef(lmIy~x+x2+x3 -1)
coef(lm(y~x+x2+x3 -1)
)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
summary(fit)
data(mtcars)
attach(mtcars)
fit <- lm(mpg ~wt, mtcars)
summary(fit)
exp <- fit$coefficients[1] + mean(wt) * fit$coefficients[2]
exp - 2 * 0.5591
x <- mtcars$wt
y <- mtcars$mpg
predict(lm(y~x), newdata = data.frame(x=mean(x)),interval="confidence")
?mtcars
mtcars[,6]
name(mtcars[,6])
summary(mtcars[,6])
predict(fit,data.frame(x=3),interval="prediction")
predict(fit,data.frame(x=3),interval="prediction")
wt <- mtcars$wt
mpg <- mtcars$mpg
fit <- lm(mpg~wt, mtcars)
newdata <- data.frame(wt=3)
x <- predict(fit,newdata,interval="prediction")
x
2 * fit$coefficients[2]-2*0.5591
2 * (fit$coefficients[2]-2*0.5591)
x <- predict(fit,newdata,interval="confidence")
x
newdata <- data.frame(wt=2)
x <- predict(fit,newdata,interval="confidence")
x
fit <- lm(mpg~wt, mtcars)
summary(fit)
2 * (fit$coefficients[2] - 2 * 0.5591)
attributes(fit)
w.c <- fit$residuals ^ 2
fit.c <- lm(mpg ~1, mtcars)
fit.c.res <- fit.c$residuals ^ 2
sum(fit.c.res)
sum(w.c)/sum(fit.c.res)
setwd("~/Google Drive/LJMU6/Research/Git/datascience/7_regressionmodules/week_three")
library(datasets)
data(swiss)
require(stats)
require(graphics)
pairs(swiss, panel=panel.smooth, main="Swiss Data", col=3 + (Swiss$Catholic > 50))
pairs(swiss, panel=panel.smooth, main="Swiss Data", col=3 + (swiss$Catholic > 50))
?swiss
summary(lm(Fertility ~., data=swiss))
summary(lm(Fertility ~Agriculture, data=swiss))
summary(lm(Fertility ~Agriculture, data=swiss))$coef
datafilename="http://personality-project.org/revelle/R/datasets/maps.mixx.epi.bfi.data"
data =read.table(datafilename,header=TRUE)
data =read.table(datafilename,header=TRUE)
datafilename="http://personality-project.org/revelle/r/datasets/maps.mixx.epi.bfi.data"
data =read.table(datafilename,header=TRUE)
library(MASS)
?shuttle
data(shuttle)
str(shuttle)
names(shuttle)
?glm
fit <- glm(use ~ wind, family='binomial', shuttle)
exp(fit$coeff)
fit <- glm(use ~ wind + as.factor(magn), family='binomial', shuttle)
exp(fit$coeff)
library(MASS)
shuttle1<-shuttle
levels(shuttle1$use)[1]<-"1"
levels(shuttle1$use)[2]<-"0"
shuttle1$use<-as.numeric(as.character(shuttle1$use))
glm(formula = use ~ factor(wind), family = binomial(logit), data = shuttle1)
1/exp(0.03181)
summary(logRegshuttle <- glm(use ~ wind,family="binomial", data=shuttle1))
glm(formula = use ~ factor(wind)+magn, family = binomial(logit), data = shuttle1)
1/exp(0.03201)
LogiRegUseMinus<-glm((1-shuttle$use)~shuttle$wind,family="binomial")
glm(formula = 1-use ~ factor(wind), family = binomial(logit), data = shuttle1)
1-0.03181
exp(coef(glm(count ~ as.factor(spray) - 1, family="poisson", InsectSprays)))
14.5/15.333
data(InsectSprays)
InsectSprays
pspray <- glm(InsectSprays$count ~ factor(InsectSprays$spray),family="Poisson")
pspray <- glm(InsectSprays$count ~ factor(InsectSprays$spray),family="poisson")
summary(pspray)
exp(2.659)
data(InsectSprays)
fit <- glm(count ~ spray  - 1, family = "poisson", data = InsectSprays)
exp(fit$coef[1])/exp(fit$coef[2])
data(mtcars)
fit1 <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
summary(fit1)
# Using a knot point at 0, fit a linear model that looks like a hockey stick
# with two lines meeting at x=0. Include an intercept term, x and the knot point
# term. What is the estimated slope of the line after 0?
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
# lin.mod <- lm(y ~ x)
# segmented.mod <- segmented(lin.mod, seg.Z = ~ x, psi = 0)
#
# summary(segmented.mod)
#
# plot(x, y)
# plot(segmented.mod, add = TRUE)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
lhs <- function(x) ifelse(x < 0,0-x,0) # basis function 1 (lhs = left hockey stick)
rhs <- function(x) ifelse(x > 0,x-0,0) # basis function 2 (rhs = right hockey stick)
gb <- lm(y ~ lhs(x) + rhs(x))
x <- seq(-5,5,by=1)
py <- gb$coef[1]+gb$coef[2]*lhs(x)+gb$coef[3]*rhs(x)
lines(x, py)
